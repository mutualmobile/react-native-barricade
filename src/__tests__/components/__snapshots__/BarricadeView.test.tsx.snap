// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`given that barricade is undefined, should match snapshot 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  visible={true}
>
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#EBEBEB",
        },
        Object {
          "borderColor": "#DEDEDE",
        },
      ]
    }
  />
</Modal>
`;

exports[`given that theme is dark and detail view is selected, should match BarricadeView snapshot 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  visible={true}
>
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#EBEBEB",
        },
        Object {
          "borderColor": "#DEDEDE",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#2D2D2D",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomWidth": 1,
            },
            Object {
              "backgroundColor": "#181818",
            },
            Object {
              "borderColor": "#69696D",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 82.14285714285714,
              "marginHorizontal": 24,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 40,
                  "fontWeight": "bold",
                  "left": 0,
                  "marginHorizontal": 120,
                  "position": "absolute",
                  "right": 0,
                  "textAlign": "center",
                },
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            First API
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              ‹ Back
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          />
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {
              "flexGrow": 1,
            },
            Object {
              "backgroundColor": "#2D2D2D",
            },
          ]
        }
        data={
          Array [
            Object {
              "handler": [Function],
              "isSelected": true,
              "label": "Success",
            },
            Object {
              "handler": [Function],
              "isSelected": false,
              "label": "Error",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexGrow": 1,
          }
        }
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#69696D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ]
                }
              >
                Success
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                    },
                    Object {
                      "color": "#007aa3",
                    },
                  ]
                }
              >
                ✓
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#69696D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ]
                }
              >
                Error
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
</Modal>
`;

exports[`given that theme is dark and list view is selected, should match BarricadeView snapshot 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  visible={true}
>
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#EBEBEB",
        },
        Object {
          "borderColor": "#DEDEDE",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#2D2D2D",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomWidth": 1,
            },
            Object {
              "backgroundColor": "#181818",
            },
            Object {
              "borderColor": "#69696D",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 82.14285714285714,
              "marginHorizontal": 24,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 40,
                  "fontWeight": "bold",
                  "left": 0,
                  "marginHorizontal": 120,
                  "position": "absolute",
                  "right": 0,
                  "textAlign": "center",
                },
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            Barricade
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              Reset
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              Done
            </Text>
          </View>
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {
              "flexGrow": 1,
            },
            Object {
              "backgroundColor": "#2D2D2D",
            },
          ]
        }
        data={
          Array [
            Object {
              "label": "First API",
              "method": "GET",
              "pathEvaluation": Object {
                "path": "/first/api",
                "type": 2,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Success",
            },
            Object {
              "label": "Second API",
              "method": "POST",
              "pathEvaluation": Object {
                "path": "/second/api",
                "type": 1,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Error",
            },
            Object {
              "label": "Third API",
              "method": "POST",
              "pathEvaluation": Object {
                "callback": [Function],
                "path": "/third/api",
                "type": 0,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Success",
            },
          ]
        }
        extraData={0}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexGrow": 1,
          }
        }
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#69696D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem0"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ]
                }
              >
                First API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#EBEBEB",
                    },
                  ]
                }
              >
                Success
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#EBEBEB",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#69696D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem1"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ]
                }
              >
                Second API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#EBEBEB",
                    },
                  ]
                }
              >
                Error
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#EBEBEB",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#69696D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem2"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ]
                }
              >
                Third API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#EBEBEB",
                    },
                  ]
                }
              >
                Success
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#EBEBEB",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          Array [
            Object {
              "borderTopWidth": 1,
              "height": 50,
            },
            Object {
              "backgroundColor": "#181818",
            },
            Object {
              "borderColor": "#69696D",
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "marginHorizontal": 24,
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 36,
                  "textAlign": "center",
                },
                Object {
                  "color": "#EE0003",
                },
              ]
            }
          >
            Disable Barricade
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</Modal>
`;

exports[`given that theme is light and detail view is selected, should match BarricadeView snapshot 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  visible={true}
>
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#EBEBEB",
        },
        Object {
          "borderColor": "#DEDEDE",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomWidth": 1,
            },
            Object {
              "backgroundColor": "#EBEBEB",
            },
            Object {
              "borderColor": "#DEDEDE",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 82.14285714285714,
              "marginHorizontal": 24,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 40,
                  "fontWeight": "bold",
                  "left": 0,
                  "marginHorizontal": 120,
                  "position": "absolute",
                  "right": 0,
                  "textAlign": "center",
                },
                Object {
                  "color": "#181818",
                },
              ]
            }
          >
            First API
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              ‹ Back
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          />
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {
              "flexGrow": 1,
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
        data={
          Array [
            Object {
              "handler": [Function],
              "isSelected": true,
              "label": "Success",
            },
            Object {
              "handler": [Function],
              "isSelected": false,
              "label": "Error",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexGrow": 1,
          }
        }
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#DEDEDE",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#181818",
                    },
                  ]
                }
              >
                Success
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                    },
                    Object {
                      "color": "#007aa3",
                    },
                  ]
                }
              >
                ✓
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#DEDEDE",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#181818",
                    },
                  ]
                }
              >
                Error
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
</Modal>
`;

exports[`given that theme is light and list view is selected, should match BarricadeView snapshot 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  visible={true}
>
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#EBEBEB",
        },
        Object {
          "borderColor": "#DEDEDE",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomWidth": 1,
            },
            Object {
              "backgroundColor": "#EBEBEB",
            },
            Object {
              "borderColor": "#DEDEDE",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 82.14285714285714,
              "marginHorizontal": 24,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 40,
                  "fontWeight": "bold",
                  "left": 0,
                  "marginHorizontal": 120,
                  "position": "absolute",
                  "right": 0,
                  "textAlign": "center",
                },
                Object {
                  "color": "#181818",
                },
              ]
            }
          >
            Barricade
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              Reset
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 20,
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "fontSize": 36,
                    "margin": 16,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#007aa3",
                  },
                ]
              }
            >
              Done
            </Text>
          </View>
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Array [
            Object {
              "flexGrow": 1,
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
        data={
          Array [
            Object {
              "label": "First API",
              "method": "GET",
              "pathEvaluation": Object {
                "path": "/first/api",
                "type": 2,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Success",
            },
            Object {
              "label": "Second API",
              "method": "POST",
              "pathEvaluation": Object {
                "path": "/second/api",
                "type": 1,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Error",
            },
            Object {
              "label": "Third API",
              "method": "POST",
              "pathEvaluation": Object {
                "callback": [Function],
                "path": "/third/api",
                "type": 0,
              },
              "responseHandler": Array [
                Object {
                  "handler": [Function],
                  "isSelected": true,
                  "label": "Success",
                },
                Object {
                  "handler": [Function],
                  "isSelected": false,
                  "label": "Error",
                },
              ],
              "selectedResponseLabel": "Success",
            },
          ]
        }
        extraData={0}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexGrow": 1,
          }
        }
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#DEDEDE",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem0"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#181818",
                    },
                  ]
                }
              >
                First API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#69696D",
                    },
                  ]
                }
              >
                Success
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#69696D",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#DEDEDE",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem1"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#181818",
                    },
                  ]
                }
              >
                Second API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#69696D",
                    },
                  ]
                }
              >
                Error
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#69696D",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 1,
                  "borderColor": "#DEDEDE",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingHorizontal": 40,
                  "paddingVertical": 19.714285714285715,
                }
              }
              testID="listItem2"
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 36,
                      "fontWeight": "400",
                    },
                    Object {
                      "color": "#181818",
                    },
                  ]
                }
              >
                Third API
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 32,
                    },
                    Object {
                      "color": "#69696D",
                    },
                  ]
                }
              >
                Success
                 
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 36,
                      },
                      Object {
                        "color": "#69696D",
                      },
                    ]
                  }
                >
                  ›
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          Array [
            Object {
              "borderTopWidth": 1,
              "height": 50,
            },
            Object {
              "backgroundColor": "#EBEBEB",
            },
            Object {
              "borderColor": "#DEDEDE",
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "marginHorizontal": 24,
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "fontSize": 36,
                  "textAlign": "center",
                },
                Object {
                  "color": "#EE0003",
                },
              ]
            }
          >
            Disable Barricade
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</Modal>
`;
